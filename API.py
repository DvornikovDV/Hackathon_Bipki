import yaml
from fastapi import FastAPI
from pydantic import BaseModel
from datetime import datetime
from main_langchain import run_query

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI()




# –ø—Ä–∏–º–µ—Ä –º–æ–¥–µ–ª–∏: –æ–ø–∏—Å—ã–≤–∞–µ—Ç, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.
class UserRequest(BaseModel):
    question: str

# –æ–ø–∏—Å—ã–≤–∞–µ—Ç, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—ë—Ç
class UserResponse(BaseModel):
    answer: str
    context: list[str]


# —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
@app.on_event("startup")
async def generate_openapi_yaml():
    # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è API –≤ yaml
    openapi_schema = app.openapi()
    with open("openapi.yaml", "w") as f:
        yaml.dump(openapi_schema, f, default_flow_style=False, allow_unicode=True)
    print("OpenAPI YAML —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞!")
    

# =====================
#  –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã
# =====================

# get-–∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ health-check
@app.get("/health")
async def health():
    """health-check; –≤ –Ω–æ—Ä–º–µ –≤—ã–¥–∞—ë—Ç Ok"""
    # docstring –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤ /doc
    return {"status": "Ok", "timestamp": datetime.utcnow().isoformat() + "Z"}

@app.post("/qa", response_model=UserResponse,  summary="–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def answer_to_user(user: UserRequest) -> UserResponse:
    """
    * .split('–ü–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç: ')[1].split("–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")[0]
    """
    answer = run_query(user.question)
    return UserResponse(answer=answer["answer"], context=answer["context"])


# =====================
#  –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
# =====================
# uvicorn API:app --host 0.0.0.0 --port 8888 
# --workers 4

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∞–¥—Ä–µ—Å–∞–º:
# Swagger UI:
# üìå http://127.0.0.1:8888/docs ‚Äî –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.
# –¢–∞–º –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç—ã.

# ReDoc:
# üìå http://127.0.0.1:8888/redoc ‚Äî –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è, –±–æ–ª–µ–µ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.

# –§–∞–π–ª OpenAPI:
# üìå http://127.0.0.1:8888/openapi.json ‚Äî –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.

"""
10.1.19.2
192.168.49.61

=====================
–ú–æ–¥–µ–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞

–ú–æ–¥–µ–ª—å ‚Äî —ç—Ç–æ Python-–∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç pydantic.BaseModel –∏ –æ–ø–∏—Å—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö, –∫–∞–∫–∏–µ —É –Ω–∏—Ö —Ç–∏–ø—ã, –∏ –∫–∞–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è.

FastAPI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:
* –ü—Ä–æ–≤–µ—Ä–∏—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —ç—Ç–∏–º —Ç–∏–ø–∞–º.
* –°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è Swagger UI.
* –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—ä–µ–∫—Ç Python

–ú–æ–¥–µ–ª–∏ –æ—Ç–¥–µ–ª—è—é—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤. –ö–æ–¥ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º.
=====================
"""